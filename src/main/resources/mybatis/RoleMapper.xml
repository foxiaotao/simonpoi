<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="simon.demo.core.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="simon.demo.core.bean.Role" >
    <id column="rid" property="rid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="descp" property="descp" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="BIGINT" />
    <result column="isDelete" property="isdelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_Page" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role.rid, role.name, role.descp, role.parentid, role.isDelete
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" >
    select rid, name, descp, parentid, isDelete
    from role
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="simon.demo.core.bean.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="join != null" >
      ${join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithPage" resultMap="BaseResultMap" parameterType="map" >
    select 
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="example.join != null" >
      ${example.join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Page" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    limit ${startPage},${rows}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where rid = #{rid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where rid = #{rid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="simon.demo.core.bean.RoleExample" >
    delete from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="simon.demo.core.bean.Role" >
    insert into role (rid, name, descp, 
      parentid, isDelete)
    values (#{rid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{descp,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=BIGINT}, #{isdelete,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into role (rid, name, descp, 
      parentid, isDelete)
    <foreach collection="list"  item="item"  index="index" separator="union all">
    (select #{item.rid,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.descp,jdbcType=VARCHAR}, 
      #{item.parentid,jdbcType=BIGINT}, #{item.isdelete,jdbcType=VARCHAR} from dual)
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="simon.demo.core.bean.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="descp != null" >
        descp,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="isdelete != null" >
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        #{descp,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="simon.demo.core.bean.RoleExample" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="join != null" >
      ${join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countAll" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="join != null" >
      ${join}
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.descp != null" >
        descp = #{record.descp,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.isdelete != null" >
        isDelete = #{record.isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role
    set rid = #{record.rid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      descp = #{record.descp,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=BIGINT},
      isDelete = #{record.isdelete,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="simon.demo.core.bean.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        descp = #{descp,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="simon.demo.core.bean.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      descp = #{descp,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=BIGINT},
      isDelete = #{isdelete,jdbcType=VARCHAR}
    where rid = #{rid,jdbcType=BIGINT}
  </update>
</mapper>