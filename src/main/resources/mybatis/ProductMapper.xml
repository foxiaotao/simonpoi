<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="simon.demo.core.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="simon.demo.core.bean.Product" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="attr" property="attr" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_Page" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product.id, product.product, product.unit, product.attr, product.status
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, product, unit, attr, status
    from product
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="simon.demo.core.bean.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="join != null" >
      ${join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithPage" resultMap="BaseResultMap" parameterType="map" >
    select 
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="example.join != null" >
      ${example.join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Page" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    limit ${startPage},${rows}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="simon.demo.core.bean.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="simon.demo.core.bean.Product" >
    
    insert into product (id, product, unit, 
      attr, status)
    values (#{id,jdbcType=VARCHAR}, #{product,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{attr,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into product (id, product, unit, attr, 
      status)
    select SEQ_TBL_Invoice.NEXTVAL  ,A.* from(
    <foreach collection="list"  item="item"  index="index" separator="union all">
    (select #{item.product,jdbcType=VARCHAR}, #{item.unit,jdbcType=VARCHAR}, #{item.attr,jdbcType=VARCHAR}, 
      #{item.status,jdbcType=VARCHAR} from dual)
    </foreach>
    ) A
  </insert>
  <insert id="insertSelective" parameterType="simon.demo.core.bean.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="attr != null" >
        attr,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=bigint},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="attr != null" >
        #{attr,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="simon.demo.core.bean.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="join != null" >
      ${join}
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countAll" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="join != null" >
      ${join}
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.product != null" >
        product = #{record.product,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.attr != null" >
        attr = #{record.attr,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=VARCHAR},
      product = #{record.product,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      attr = #{record.attr,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="simon.demo.core.bean.Product" >
    update product
    <set >
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="attr != null" >
        attr = #{attr,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="simon.demo.core.bean.Product" >
    update product
    set product = #{product,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      attr = #{attr,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>